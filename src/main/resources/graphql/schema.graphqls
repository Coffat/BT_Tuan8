type Query {
    getAllProducts: [Product]
    getProductsSortedByPrice: [Product]
    getProductsByCategory(categoryId: ID!): [Product]
    getProductById(id: ID!): Product
    getProductsByUser(userId: ID!): [Product]
    
    getAllUsers: [User]
    getUserById(id: ID!): User
    getUserByEmail(email: String!): User
    
    getAllCategories: [Category]
    getCategoryById(id: ID!): Category
}

type Mutation {
    createProduct(input: ProductInput!): Product
    updateProduct(id: ID!, input: ProductInput!): Product
    deleteProduct(id: ID!): Boolean
    
    createUser(input: UserInput!): User
    updateUser(id: ID!, input: UserInput!): User
    deleteUser(id: ID!): Boolean
    
    createCategory(input: CategoryInput!): Category
    updateCategory(id: ID!, input: CategoryInput!): Category
    deleteCategory(id: ID!): Boolean
}

type Product {
    id: ID!
    title: String!
    quantity: Int!
    description: String
    price: Float!
    user: User
    categories: [Category!]!
}

type User {
    id: ID!
    fullname: String!
    email: String!
    phone: String
    products: [Product!]!
    categories: [Category!]!
}

type Category {
    id: ID!
    name: String!
    images: String
    products: [Product!]!
    users: [User!]!
}

input ProductInput {
    title: String!
    quantity: Int!
    description: String
    price: Float!
    userId: ID
    categoryIds: [ID!]
}

input UserInput {
    fullname: String!
    email: String!
    password: String
    phone: String
    categoryIds: [ID!]
}

input CategoryInput {
    name: String!
    images: String
}
